/*
 * 抖音开放API
 * douyin open api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ConnectReq
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-09-22T12:48:25.482Z[GMT]")
public class ConnectReq {
  public static final String SERIALIZED_NAME_CLIENT_KEY = "client_key";
  @SerializedName(SERIALIZED_NAME_CLIENT_KEY)
  private String clientKey;

  public static final String SERIALIZED_NAME_RESPONSE_TYPE = "response_type";
  @SerializedName(SERIALIZED_NAME_RESPONSE_TYPE)
  private String responseType;

  public static final String SERIALIZED_NAME_SCOPE = "scope";
  @SerializedName(SERIALIZED_NAME_SCOPE)
  private String scope;

  public static final String SERIALIZED_NAME_OPTIONAL_SCOPE = "optionalScope";
  @SerializedName(SERIALIZED_NAME_OPTIONAL_SCOPE)
  private String optionalScope;

  public static final String SERIALIZED_NAME_REDIRECT_URI = "redirect_uri";
  @SerializedName(SERIALIZED_NAME_REDIRECT_URI)
  private String redirectUri;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;


  public ConnectReq clientKey(String clientKey) {
    
    this.clientKey = clientKey;
    return this;
  }

   /**
   * 应用唯一标识
   * @return clientKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "应用唯一标识")

  public String getClientKey() {
    return clientKey;
  }


  public void setClientKey(String clientKey) {
    this.clientKey = clientKey;
  }


  public ConnectReq responseType(String responseType) {
    
    this.responseType = responseType;
    return this;
  }

   /**
   * 填写code
   * @return responseType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "填写code")

  public String getResponseType() {
    return responseType;
  }


  public void setResponseType(String responseType) {
    this.responseType = responseType;
  }


  public ConnectReq scope(String scope) {
    
    this.scope = scope;
    return this;
  }

   /**
   * 应用授权作用域,多个授权作用域以英文逗号（,）分隔
   * @return scope
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "应用授权作用域,多个授权作用域以英文逗号（,）分隔")

  public String getScope() {
    return scope;
  }


  public void setScope(String scope) {
    this.scope = scope;
  }


  public ConnectReq optionalScope(String optionalScope) {
    
    this.optionalScope = optionalScope;
    return this;
  }

   /**
   * 应用授权可选作用域,多个授权作用域以英文逗号（,）分隔，每一个授权作用域后需要加上一个是否默认勾选的参数，1为默认勾选，0为默认不勾选
   * @return optionalScope
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "应用授权可选作用域,多个授权作用域以英文逗号（,）分隔，每一个授权作用域后需要加上一个是否默认勾选的参数，1为默认勾选，0为默认不勾选")

  public String getOptionalScope() {
    return optionalScope;
  }


  public void setOptionalScope(String optionalScope) {
    this.optionalScope = optionalScope;
  }


  public ConnectReq redirectUri(String redirectUri) {
    
    this.redirectUri = redirectUri;
    return this;
  }

   /**
   * 授权成功后的回调地址，必须以http/https开头。域名必须对应申请应用时填写的域名，如不清楚请联系应用申请人。
   * @return redirectUri
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "授权成功后的回调地址，必须以http/https开头。域名必须对应申请应用时填写的域名，如不清楚请联系应用申请人。")

  public String getRedirectUri() {
    return redirectUri;
  }


  public void setRedirectUri(String redirectUri) {
    this.redirectUri = redirectUri;
  }


  public ConnectReq state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * 用于保持请求和回调的状态
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "用于保持请求和回调的状态")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    this.state = state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectReq connectReq = (ConnectReq) o;
    return Objects.equals(this.clientKey, connectReq.clientKey) &&
        Objects.equals(this.responseType, connectReq.responseType) &&
        Objects.equals(this.scope, connectReq.scope) &&
        Objects.equals(this.optionalScope, connectReq.optionalScope) &&
        Objects.equals(this.redirectUri, connectReq.redirectUri) &&
        Objects.equals(this.state, connectReq.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientKey, responseType, scope, optionalScope, redirectUri, state);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectReq {\n");
    sb.append("    clientKey: ").append(toIndentedString(clientKey)).append("\n");
    sb.append("    responseType: ").append(toIndentedString(responseType)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    optionalScope: ").append(toIndentedString(optionalScope)).append("\n");
    sb.append("    redirectUri: ").append(toIndentedString(redirectUri)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

